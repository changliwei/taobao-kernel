From: Zheng Liu <wenqing.lz@taobao.com>
Subject: [PATCH 2/3 v2.1] ext4: add expose_stale_data feature in ext4
Patch-mainline: In house
References: 

When FALLOC_FL_EXPOSE_STALE_DATA flag is set, we create an initialized extent
directly.

Signed-off-by: Zheng Liu <wenqing.lz@taobao.com>
Acked-by: 

Index: linux-2.6.32-279.9.1.el5/fs/ext4/extents.c
===================================================================
--- linux-2.6.32-279.9.1.el5.orig/fs/ext4/extents.c	2012-09-29 10:25:49.000000000 +0800
+++ linux-2.6.32-279.9.1.el5/fs/ext4/extents.c	2012-09-29 10:25:52.000000000 +0800
@@ -4244,6 +4244,7 @@
 	int ret = 0;
 	int ret2 = 0;
 	int retries = 0;
+	int flags;
 	struct buffer_head map_bh;
 	unsigned int credits, blkbits = inode->i_blkbits;
 
@@ -4254,6 +4255,10 @@
 	if (!(ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)))
 		return -EOPNOTSUPP;
 
+	/* Return error if mode is not supported */
+	if (mode & ~(FALLOC_FL_KEEP_SIZE | FALLOC_FL_EXPOSE_STALE_DATA))
+		return -EOPNOTSUPP;
+
 	/* preallocation to directories is currently not supported */
 	if (S_ISDIR(inode->i_mode))
 		return -ENODEV;
@@ -4275,6 +4280,10 @@
 		mutex_unlock(&inode->i_mutex);
 		return ret;
 	}
+	if (mode & FALLOC_FL_EXPOSE_STALE_DATA)
+		flags = EXT4_GET_BLOCKS_CREATE;
+	else
+		flags = EXT4_GET_BLOCKS_CREATE_UNINIT_EXT;
 retry:
 	while (ret >= 0 && ret < max_blocks) {
 		block = block + ret;
@@ -4289,7 +4298,7 @@
 		map.m_len = max_blocks;
 		ret = ext4_get_blocks(handle, inode, &map,
 				      &map_bh,
-				      EXT4_GET_BLOCKS_CREATE_UNINIT_EXT);
+				      flags);
 		if (ret <= 0) {
 #ifdef EXT4FS_DEBUG
 			WARN_ON(ret <= 0);
