commit 8f49c2703b33519aaaccc63f571b465b9d2b3a2d
Author: David S. Miller <davem@davemloft.net>
From: David S. Miller <davem@davemloft.net>
Date:   Fri Nov 12 13:35:00 2010 -0800
Subject: tcp: Don't change unlocked socket state in tcp_v4_err().
Patch-mainline: 2.6.36
Reference:

    tcp: Don't change unlocked socket state in tcp_v4_err().
    
    Alexey Kuznetsov noticed a regression introduced by
    commit f1ecd5d9e7366609d640ff4040304ea197fbc618
    ("Revert Backoff [v3]: Revert RTO on ICMP destination unreachable")
    
    The RTO and timer modification code added to tcp_v4_err()
    doesn't check sock_owned_by_user(), which if true means we
    don't have exclusive access to the socket and therefore cannot
    modify it's critical state.
    
    Just skip this new code block if sock_owned_by_user() is true
    and eliminate the now superfluous sock_owned_by_user() code
    block contained within.
    
Reported-by: Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>
Signed-off-by: David S. Miller <davem@davemloft.net>
CC: Damian Lukowski <damian@tvk.rwth-aachen.de>
Acked-by: Eric Dumazet <eric.dumazet@gmail.com>
Signed-off-by: Coly Li <bosong.ly@taobao.com>
---
--- linux-2.6.32-131.21.1.el5.x86_64/net/ipv4/tcp_ipv4.c.orig	2011-11-25 01:43:29.000000000 +0800
+++ linux-2.6.32-131.21.1.el5.x86_64/net/ipv4/tcp_ipv4.c	2011-11-29 01:02:09.000000000 +0800
@@ -406,6 +406,9 @@ void tcp_v4_err(struct sk_buff *icmp_skb
 		    !icsk->icsk_backoff)
 			break;
 
+		if (sock_owned_by_user(sk))
+			break;
+
 		icsk->icsk_backoff--;
 		inet_csk(sk)->icsk_rto = __tcp_set_rto(tp) <<
 					 icsk->icsk_backoff;
@@ -420,11 +423,6 @@ void tcp_v4_err(struct sk_buff *icmp_skb
 		if (remaining) {
 			inet_csk_reset_xmit_timer(sk, ICSK_TIME_RETRANS,
 						  remaining, TCP_RTO_MAX);
-		} else if (sock_owned_by_user(sk)) {
-			/* RTO revert clocked out retransmission,
-			 * but socket is locked. Will defer. */
-			inet_csk_reset_xmit_timer(sk, ICSK_TIME_RETRANS,
-						  HZ/20, TCP_RTO_MAX);
 		} else {
 			/* RTO revert clocked out retransmission.
 			 * Will retransmit now */

