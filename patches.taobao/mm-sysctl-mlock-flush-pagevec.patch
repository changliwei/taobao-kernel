From: Chen Jiajun <mofan.cjj@taobao.com>
Subject: mm: add a sysctl interface to enable/disable lru pagevec flush in mlock/mlockall
Patch-mainline: in-house
References: 

We observe mlock()/mlockall() has performance degradation in 2.6.32 kernel, 
cause of calling lru_add_drain_all(). This patch skip lru_add_drain_all() by default. 
"echo 1 > /proc/sys/vm/mlock_flush_pagevec" to enable this function.

Signed-off-by: Chen Jiajun <mofan.cjj@taobao.com>
Acked-by: Tao Ma <boyu.mt@taobao.com>

---
Index: linux-2.6.32-220.13.1.el5/include/linux/sysctl.h
===================================================================
--- linux-2.6.32-220.13.1.el5.orig/include/linux/sysctl.h	2012-04-19 17:30:37.492181241 +0800
+++ linux-2.6.32-220.13.1.el5/include/linux/sysctl.h	2012-04-19 17:31:34.320464354 +0800
@@ -205,6 +205,7 @@
 	VM_VDSO_ENABLED=34,	/* map VDSO into new processes? */
 	VM_MIN_SLAB=35,		 /* Percent pages ignored by zone reclaim */
 	VM_ENABLE_CONTEXT_READAHEAD=36, /* Decide whether to do context readahead or not */
+	VM_MLOCK_FLUSH_PAGEVEC=37,	/* switch of flushing lru pagevec in mlock */
 };
 
 
Index: linux-2.6.32-220.13.1.el5/kernel/sysctl.c
===================================================================
--- linux-2.6.32-220.13.1.el5.orig/kernel/sysctl.c	2012-04-19 17:30:37.492181241 +0800
+++ linux-2.6.32-220.13.1.el5/kernel/sysctl.c	2012-04-19 17:31:34.324464201 +0800
@@ -97,6 +97,7 @@
 #endif
 extern int kexec_load_disabled;
 extern int sysctl_enable_cnx_ra;
+extern int sysctl_mlock_flush_pagevec;
 
 int exec_shield = (1<<0);
 /* exec_shield is a bitmask:
@@ -1604,7 +1605,17 @@
 		.proc_handler   = &proc_dointvec_minmax,
 		.strategy       = &sysctl_intvec,
 	},
-
+	{
+		.ctl_name	= VM_MLOCK_FLUSH_PAGEVEC,
+		.procname	= "mlock_flush_pagevec",
+		.data		= &sysctl_mlock_flush_pagevec,
+		.maxlen		= sizeof(sysctl_mlock_flush_pagevec),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec_minmax,
+		.strategy	= &sysctl_intvec,
+		.extra1		= &zero,
+		.extra2		= &one,
+	},
 /*
  * NOTE: do not add new entries to this table unless you have read
  * Documentation/sysctl/ctl_unnumbered.txt
Index: linux-2.6.32-220.13.1.el5/mm/mlock.c
===================================================================
--- linux-2.6.32-220.13.1.el5.orig/mm/mlock.c	2012-04-19 17:24:43.930428019 +0800
+++ linux-2.6.32-220.13.1.el5/mm/mlock.c	2012-04-19 17:31:34.324464201 +0800
@@ -21,6 +21,9 @@
 
 #include "internal.h"
 
+/* flush lru pagevec in mlock()/mlockall() */
+int sysctl_mlock_flush_pagevec = 0;
+
 int can_do_mlock(void)
 {
 	if (capable(CAP_IPC_LOCK))
@@ -494,7 +497,8 @@
 	if (!can_do_mlock())
 		return -EPERM;
 
-	lru_add_drain_all();	/* flush pagevec */
+	if (sysctl_mlock_flush_pagevec)
+		lru_add_drain_all();	/* flush pagevec */
 
 	down_write(&current->mm->mmap_sem);
 	len = PAGE_ALIGN(len + (start & ~PAGE_MASK));
@@ -562,7 +566,8 @@
 	if (!can_do_mlock())
 		goto out;
 
-	lru_add_drain_all();	/* flush pagevec */
+	if (sysctl_mlock_flush_pagevec)
+		lru_add_drain_all();	/* flush pagevec */
 
 	down_write(&current->mm->mmap_sem);
 
