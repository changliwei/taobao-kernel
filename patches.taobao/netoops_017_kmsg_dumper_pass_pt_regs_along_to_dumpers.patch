From:   Mike Waychison <mikew@google.com>
Date:   Mon Apr 25 13:48:51 2011 +0800
Subject: [PATCH 17/24] kmsg_dumper: pass pt_regs along to dumpers.
Patch-mainline: linux-2.6.32-71.18.1.el6

Signed-off-by: Mike Waychison <mikew@google.com>
Signed-off-by: Robin Dong <sanbai@taobao.com>
---
Index: linux-2.6.32-220.0.0.el5/include/linux/kmsg_dump.h
===================================================================
--- linux-2.6.32-220.0.0.el5.orig/include/linux/kmsg_dump.h	2011-12-21 22:40:51.000000000 +0800
+++ linux-2.6.32-220.0.0.el5/include/linux/kmsg_dump.h	2011-12-21 22:41:46.000000000 +0800
@@ -14,6 +14,8 @@
 
 #include <linux/list.h>
 
+struct pt_regs;
+
 enum kmsg_dump_reason {
 	KMSG_DUMP_OOPS,
 	KMSG_DUMP_PANIC,
@@ -30,6 +32,7 @@
  */
 struct kmsg_dumper {
 	void (*dump)(struct kmsg_dumper *dumper, enum kmsg_dump_reason reason,
+			struct pt_regs *pt_regs,
 			const char *s1, unsigned long l1,
 			const char *s2, unsigned long l2);
 	struct list_head list;
@@ -37,13 +40,13 @@
 };
 
 #ifdef CONFIG_PRINTK
-void kmsg_dump(enum kmsg_dump_reason reason);
+void kmsg_dump(enum kmsg_dump_reason reason, struct pt_regs *pt_regs);
 
 int kmsg_dump_register(struct kmsg_dumper *dumper);
 
 int kmsg_dump_unregister(struct kmsg_dumper *dumper);
 #else
-static inline void kmsg_dump(enum kmsg_dump_reason reason)
+static inline void kmsg_dump(enum kmsg_dump_reason reason, struct pt_regs *pt_regs)
 {
 }
 
Index: linux-2.6.32-220.0.0.el5/kernel/kexec.c
===================================================================
--- linux-2.6.32-220.0.0.el5.orig/kernel/kexec.c	2011-12-21 22:40:49.000000000 +0800
+++ linux-2.6.32-220.0.0.el5/kernel/kexec.c	2011-12-21 22:41:46.000000000 +0800
@@ -1081,10 +1081,11 @@
 		if (kexec_crash_image) {
 			struct pt_regs fixed_regs;
 
-			kmsg_dump(KMSG_DUMP_KEXEC);
-
 			crash_setup_regs(&fixed_regs, regs);
 			crash_save_vmcoreinfo();
+
+			kmsg_dump(KMSG_DUMP_KEXEC, &fixed_regs);
+
 			machine_crash_shutdown(&fixed_regs);
 			machine_kexec(kexec_crash_image);
 		}
Index: linux-2.6.32-220.0.0.el5/kernel/panic.c
===================================================================
--- linux-2.6.32-220.0.0.el5.orig/kernel/panic.c	2011-12-21 22:41:46.000000000 +0800
+++ linux-2.6.32-220.0.0.el5/kernel/panic.c	2011-12-21 22:41:46.000000000 +0800
@@ -83,7 +83,7 @@
 	 */
 	crash_kexec(NULL);
 
-	kmsg_dump(KMSG_DUMP_PANIC);
+	kmsg_dump(KMSG_DUMP_PANIC, NULL);
 
 	/*
 	 * Note smp_send_stop is the usual smp shutdown function, which
@@ -369,7 +369,7 @@
 {
 	do_oops_enter_exit();
 	print_oops_end_marker();
-	kmsg_dump(KMSG_DUMP_OOPS);
+	kmsg_dump(KMSG_DUMP_OOPS, regs);
 }
 
 #ifdef WANT_WARN_ON_SLOWPATH
Index: linux-2.6.32-220.0.0.el5/kernel/printk.c
===================================================================
--- linux-2.6.32-220.0.0.el5.orig/kernel/printk.c	2011-12-21 22:40:49.000000000 +0800
+++ linux-2.6.32-220.0.0.el5/kernel/printk.c	2011-12-21 22:41:46.000000000 +0800
@@ -1520,7 +1520,7 @@
  * Iterate through each of the dump devices and call the oops/panic
  * callbacks with the log buffer.
  */
-void kmsg_dump(enum kmsg_dump_reason reason)
+void kmsg_dump(enum kmsg_dump_reason reason, struct pt_regs *pt_regs)
 {
 	unsigned long end;
 	unsigned chars;
@@ -1557,7 +1557,7 @@
 		return;
 	}
 	list_for_each_entry(dumper, &dump_list, list)
-		dumper->dump(dumper, reason, s1, l1, s2, l2);
+		dumper->dump(dumper, reason, pt_regs, s1, l1, s2, l2);
 	spin_unlock_irqrestore(&dump_list_lock, flags);
 }
 #endif
Index: linux-2.6.32-220.2.1.el5/fs/pstore/platform.c
===================================================================
--- linux-2.6.32-220.2.1.el5.orig/fs/pstore/platform.c
+++ linux-2.6.32-220.2.1.el5/fs/pstore/platform.c
@@ -59,7 +59,7 @@ static char *reason_str[] = {
  * as we can from the end of the buffer.
  */
 static void pstore_dump(struct kmsg_dumper *dumper,
-	    enum kmsg_dump_reason reason,
+	    enum kmsg_dump_reason reason, struct pt_regs *pt_regs,
 	    const char *s1, unsigned long l1,
 	    const char *s2, unsigned long l2)
 {
